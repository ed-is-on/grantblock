/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace com.usgov.grantblock

//Concepts

concept Obligation{
  o String granteeId
  o Long allottedAmount
}

enum RequestStatus{
  o INITIALIZED //the initial request has been created by the Grantee
  o VALIDATORS_SELECTED //validators have been selected for the request
  o VALIDATION_IN_PROGRESS  //one or more of the validators have approved, but not all of them
  o APPROVED  //all validators have approved and the request is waiting on Treasury
  o ADJUDICATED //once treasury has approved the request
  o REJECTED  //if at any point something is rejected, this will become the request status
}
//Participants

participant Education identified by userId{
  o String userId
  o String pocName
  o String pocEmail
}

participant Treasury identified by userId{
  o String userId
  o String pocName
  o String pocEmail
}

participant Grantee identified by granteeId{
  o String granteeId
  o Long grantBalance optional
  o String pocName
  o String pocEmail
}

//Assets

asset ActionRequest identified by requestId{
  o String requestId
  o RequestStatus status
  o Long requestValue
  --> Grantee owner
  o Grantee[] assignedValidators
  o Grantee[] approvedValidators
  o Boolean treasuryValidator
  o String receiptImage optional  //this would be the link or pointer/hash for the receipt
}

//transactions

transaction CreateGrantee {
  o String granteeId
  o Long grantBalance optional
  o String pocName
  o String pocEmail
}

transaction CreateEdUser {
  o String userId
  o String pocName
  o String pocEmail
}

transaction CreateTreasury {
  o String userId
  o String pocName
  o String pocEmail
}
transaction ImportGrantee {
  o String granteeId
  o Long grantBalance
  o String pocName
  o String pocEmail
}

transaction ObligateSlate {
  o Obligation[] slate
}

transaction CreateActionRequest {
  o Long requestValue
  --> Grantee requestor
}

event NotifyValidators{
  --> ActionRequest request
}

transaction AddValidatingGrantees{
    o Integer validators
  --> ActionRequest request
  --> Grantee arOwner
}

transaction ApproveActionRequest {
  o Boolean approve
  --> Grantee approver
  --> ActionRequest request
  --> Grantee arOwner
}

event NotifyRequestFailure{
  --> ActionRequest request
}

event NotifyRequestSuccess{
  --> ActionRequest request
}

transaction SetUpDemo {
  o Long grantBalance
}
//events -TODO
/*
event NotifyDisbursement  {

}

event NotifyApprovers {
  --> ActionRequest req
  o String verifierid
}

event NotifyTreasury  {
  --> ActionRequest req
}

event ActionRequestMade {
  --> ActionRequest req
}
*/